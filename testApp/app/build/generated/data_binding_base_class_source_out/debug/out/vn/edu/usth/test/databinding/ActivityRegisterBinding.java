// Generated by view binder compiler. Do not edit!
package vn.edu.usth.test.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import vn.edu.usth.test.R;

public final class ActivityRegisterBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button buttonRegister;

  @NonNull
  public final RelativeLayout main;

  @NonNull
  public final EditText registerConfirmPassword;

  @NonNull
  public final EditText registerEmail;

  @NonNull
  public final EditText registerName;

  @NonNull
  public final EditText registerPassword;

  @NonNull
  public final TextView txtLogin;

  private ActivityRegisterBinding(@NonNull RelativeLayout rootView, @NonNull Button buttonRegister,
      @NonNull RelativeLayout main, @NonNull EditText registerConfirmPassword,
      @NonNull EditText registerEmail, @NonNull EditText registerName,
      @NonNull EditText registerPassword, @NonNull TextView txtLogin) {
    this.rootView = rootView;
    this.buttonRegister = buttonRegister;
    this.main = main;
    this.registerConfirmPassword = registerConfirmPassword;
    this.registerEmail = registerEmail;
    this.registerName = registerName;
    this.registerPassword = registerPassword;
    this.txtLogin = txtLogin;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_register, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRegisterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonRegister;
      Button buttonRegister = ViewBindings.findChildViewById(rootView, id);
      if (buttonRegister == null) {
        break missingId;
      }

      RelativeLayout main = (RelativeLayout) rootView;

      id = R.id.registerConfirmPassword;
      EditText registerConfirmPassword = ViewBindings.findChildViewById(rootView, id);
      if (registerConfirmPassword == null) {
        break missingId;
      }

      id = R.id.registerEmail;
      EditText registerEmail = ViewBindings.findChildViewById(rootView, id);
      if (registerEmail == null) {
        break missingId;
      }

      id = R.id.registerName;
      EditText registerName = ViewBindings.findChildViewById(rootView, id);
      if (registerName == null) {
        break missingId;
      }

      id = R.id.registerPassword;
      EditText registerPassword = ViewBindings.findChildViewById(rootView, id);
      if (registerPassword == null) {
        break missingId;
      }

      id = R.id.txtLogin;
      TextView txtLogin = ViewBindings.findChildViewById(rootView, id);
      if (txtLogin == null) {
        break missingId;
      }

      return new ActivityRegisterBinding((RelativeLayout) rootView, buttonRegister, main,
          registerConfirmPassword, registerEmail, registerName, registerPassword, txtLogin);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
