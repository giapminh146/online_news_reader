// Generated by view binder compiler. Do not edit!
package vn.edu.usth.test.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import vn.edu.usth.test.R;

public final class ItemPodcastBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageButton playButton;

  @NonNull
  public final TextView podcastDescription;

  @NonNull
  public final TextView podcastPublicDate;

  @NonNull
  public final ImageView podcastThumbnail;

  @NonNull
  public final TextView podcastTitle;

  private ItemPodcastBinding(@NonNull CardView rootView, @NonNull ImageButton playButton,
      @NonNull TextView podcastDescription, @NonNull TextView podcastPublicDate,
      @NonNull ImageView podcastThumbnail, @NonNull TextView podcastTitle) {
    this.rootView = rootView;
    this.playButton = playButton;
    this.podcastDescription = podcastDescription;
    this.podcastPublicDate = podcastPublicDate;
    this.podcastThumbnail = podcastThumbnail;
    this.podcastTitle = podcastTitle;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemPodcastBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemPodcastBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_podcast, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemPodcastBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.playButton;
      ImageButton playButton = ViewBindings.findChildViewById(rootView, id);
      if (playButton == null) {
        break missingId;
      }

      id = R.id.podcastDescription;
      TextView podcastDescription = ViewBindings.findChildViewById(rootView, id);
      if (podcastDescription == null) {
        break missingId;
      }

      id = R.id.podcastPublicDate;
      TextView podcastPublicDate = ViewBindings.findChildViewById(rootView, id);
      if (podcastPublicDate == null) {
        break missingId;
      }

      id = R.id.podcastThumbnail;
      ImageView podcastThumbnail = ViewBindings.findChildViewById(rootView, id);
      if (podcastThumbnail == null) {
        break missingId;
      }

      id = R.id.podcastTitle;
      TextView podcastTitle = ViewBindings.findChildViewById(rootView, id);
      if (podcastTitle == null) {
        break missingId;
      }

      return new ItemPodcastBinding((CardView) rootView, playButton, podcastDescription,
          podcastPublicDate, podcastThumbnail, podcastTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
