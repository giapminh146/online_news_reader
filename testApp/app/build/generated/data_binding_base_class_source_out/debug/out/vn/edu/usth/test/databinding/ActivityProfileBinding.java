// Generated by view binder compiler. Do not edit!
package vn.edu.usth.test.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import vn.edu.usth.test.R;

public final class ActivityProfileBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView boxedAccountEmail;

  @NonNull
  public final TextView boxedAccountName;

  @NonNull
  public final Button editProfileButton;

  @NonNull
  public final ImageView profileImage;

  private ActivityProfileBinding(@NonNull RelativeLayout rootView,
      @NonNull TextView boxedAccountEmail, @NonNull TextView boxedAccountName,
      @NonNull Button editProfileButton, @NonNull ImageView profileImage) {
    this.rootView = rootView;
    this.boxedAccountEmail = boxedAccountEmail;
    this.boxedAccountName = boxedAccountName;
    this.editProfileButton = editProfileButton;
    this.profileImage = profileImage;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.boxed_account_email;
      TextView boxedAccountEmail = ViewBindings.findChildViewById(rootView, id);
      if (boxedAccountEmail == null) {
        break missingId;
      }

      id = R.id.boxed_account_name;
      TextView boxedAccountName = ViewBindings.findChildViewById(rootView, id);
      if (boxedAccountName == null) {
        break missingId;
      }

      id = R.id.edit_profile_button;
      Button editProfileButton = ViewBindings.findChildViewById(rootView, id);
      if (editProfileButton == null) {
        break missingId;
      }

      id = R.id.profile_image;
      ImageView profileImage = ViewBindings.findChildViewById(rootView, id);
      if (profileImage == null) {
        break missingId;
      }

      return new ActivityProfileBinding((RelativeLayout) rootView, boxedAccountEmail,
          boxedAccountName, editProfileButton, profileImage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
