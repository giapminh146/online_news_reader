// Generated by view binder compiler. Do not edit!
package vn.edu.usth.test.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageButton;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import vn.edu.usth.test.R;

public final class NewsRecyclerRowBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final LinearLayout bigLayout;

  @NonNull
  public final AppCompatImageButton bookmarkButton;

  @NonNull
  public final ImageView imgHeadline;

  @NonNull
  public final CardView mainContainer;

  @NonNull
  public final TextView textDescription;

  @NonNull
  public final TextView textSource;

  @NonNull
  public final TextView textTime;

  @NonNull
  public final TextView textTitle;

  private NewsRecyclerRowBinding(@NonNull CardView rootView, @NonNull LinearLayout bigLayout,
      @NonNull AppCompatImageButton bookmarkButton, @NonNull ImageView imgHeadline,
      @NonNull CardView mainContainer, @NonNull TextView textDescription,
      @NonNull TextView textSource, @NonNull TextView textTime, @NonNull TextView textTitle) {
    this.rootView = rootView;
    this.bigLayout = bigLayout;
    this.bookmarkButton = bookmarkButton;
    this.imgHeadline = imgHeadline;
    this.mainContainer = mainContainer;
    this.textDescription = textDescription;
    this.textSource = textSource;
    this.textTime = textTime;
    this.textTitle = textTitle;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static NewsRecyclerRowBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static NewsRecyclerRowBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.news_recycler_row, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static NewsRecyclerRowBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.big_layout;
      LinearLayout bigLayout = ViewBindings.findChildViewById(rootView, id);
      if (bigLayout == null) {
        break missingId;
      }

      id = R.id.bookmark_button;
      AppCompatImageButton bookmarkButton = ViewBindings.findChildViewById(rootView, id);
      if (bookmarkButton == null) {
        break missingId;
      }

      id = R.id.img_headline;
      ImageView imgHeadline = ViewBindings.findChildViewById(rootView, id);
      if (imgHeadline == null) {
        break missingId;
      }

      CardView mainContainer = (CardView) rootView;

      id = R.id.text_description;
      TextView textDescription = ViewBindings.findChildViewById(rootView, id);
      if (textDescription == null) {
        break missingId;
      }

      id = R.id.text_source;
      TextView textSource = ViewBindings.findChildViewById(rootView, id);
      if (textSource == null) {
        break missingId;
      }

      id = R.id.text_time;
      TextView textTime = ViewBindings.findChildViewById(rootView, id);
      if (textTime == null) {
        break missingId;
      }

      id = R.id.text_title;
      TextView textTitle = ViewBindings.findChildViewById(rootView, id);
      if (textTitle == null) {
        break missingId;
      }

      return new NewsRecyclerRowBinding((CardView) rootView, bigLayout, bookmarkButton, imgHeadline,
          mainContainer, textDescription, textSource, textTime, textTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
