// Generated by view binder compiler. Do not edit!
package vn.edu.usth.test.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.SeekBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import vn.edu.usth.test.R;

public final class PlayingBoxBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final SeekBar audioProgressBar;

  @NonNull
  public final ImageButton btnBack;

  @NonNull
  public final ImageButton btnClose;

  @NonNull
  public final ImageButton btnNext;

  @NonNull
  public final ImageButton btnPlayPause;

  @NonNull
  public final LinearLayout playingBox;

  @NonNull
  public final TextView tvCurrentTime;

  @NonNull
  public final TextView tvTotalTime;

  @NonNull
  public final TextView txtPlayingPodcast;

  private PlayingBoxBinding(@NonNull LinearLayout rootView, @NonNull SeekBar audioProgressBar,
      @NonNull ImageButton btnBack, @NonNull ImageButton btnClose, @NonNull ImageButton btnNext,
      @NonNull ImageButton btnPlayPause, @NonNull LinearLayout playingBox,
      @NonNull TextView tvCurrentTime, @NonNull TextView tvTotalTime,
      @NonNull TextView txtPlayingPodcast) {
    this.rootView = rootView;
    this.audioProgressBar = audioProgressBar;
    this.btnBack = btnBack;
    this.btnClose = btnClose;
    this.btnNext = btnNext;
    this.btnPlayPause = btnPlayPause;
    this.playingBox = playingBox;
    this.tvCurrentTime = tvCurrentTime;
    this.tvTotalTime = tvTotalTime;
    this.txtPlayingPodcast = txtPlayingPodcast;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PlayingBoxBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PlayingBoxBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.playing_box, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PlayingBoxBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.audioProgressBar;
      SeekBar audioProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (audioProgressBar == null) {
        break missingId;
      }

      id = R.id.btnBack;
      ImageButton btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.btnClose;
      ImageButton btnClose = ViewBindings.findChildViewById(rootView, id);
      if (btnClose == null) {
        break missingId;
      }

      id = R.id.btnNext;
      ImageButton btnNext = ViewBindings.findChildViewById(rootView, id);
      if (btnNext == null) {
        break missingId;
      }

      id = R.id.btnPlayPause;
      ImageButton btnPlayPause = ViewBindings.findChildViewById(rootView, id);
      if (btnPlayPause == null) {
        break missingId;
      }

      LinearLayout playingBox = (LinearLayout) rootView;

      id = R.id.tvCurrentTime;
      TextView tvCurrentTime = ViewBindings.findChildViewById(rootView, id);
      if (tvCurrentTime == null) {
        break missingId;
      }

      id = R.id.tvTotalTime;
      TextView tvTotalTime = ViewBindings.findChildViewById(rootView, id);
      if (tvTotalTime == null) {
        break missingId;
      }

      id = R.id.txtPlayingPodcast;
      TextView txtPlayingPodcast = ViewBindings.findChildViewById(rootView, id);
      if (txtPlayingPodcast == null) {
        break missingId;
      }

      return new PlayingBoxBinding((LinearLayout) rootView, audioProgressBar, btnBack, btnClose,
          btnNext, btnPlayPause, playingBox, tvCurrentTime, tvTotalTime, txtPlayingPodcast);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
